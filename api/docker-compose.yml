version: '3.8'
services:

  minio:
    image: bitnami/minio
    ports:
      - '9001:9001'
      - '9000:9000'

    environment:
      MINIO_ROOT_USER: ROOTUSER
      MINIO_ROOT_PASSWORD: ROOTPASSWORD123
      MINIO_SERVER_HOST: localhost
      MINIO_SCHEME: http
      MINIO_API_CORS_ALLOW_ORIGIN: "*"
      BUCKET_HOST: http://localhost:9000/
      BUCKET_ENDPOINT: http://minio:9000/
      BUCKET_ACCESS_KEY: ROOTUSER
      BUCKET_SECRET_KEY: ROOTPASSWORD123
    networks:
    - mynet  

  mc: 
    image: minio/mc
    container_name: mc
    network_mode: host
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "  
      /usr/bin/mc config host add --api s3v2 minio http://localhost:9000/ ROOTUSER ROOTPASSWORD123;  
      /usr/bin/mc rm -r --force minio/first-bucket;  
      /usr/bin/mc mb -p minio/first-bucket; 
      /usr/bin/mc anonymous set public minio/first-bucket;  
      /usr/bin/mc admin trace minio --debug;  
      "

  mongodb:
    image: mongo:latest
    container_name: 'mongodb'
    ports:
      - 27017:27017
    networks:
      - mynet


  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mynet
    environment:
    - AMQP_URL=amqp://guest:guest@rabbitmq:5672

  backend:
      restart: always
      build:
        context: ./
      volumes:
        - .:/src
      depends_on:
        - mongodb
        - rabbitmq
        - minio
      environment:
        PORT: 4000
        MONGO_URL: mongodb://mongodb:27017/mydb
        JWT_SECRET: f99e1b684fa6cd9d5d4d50551d330673
        AMQP_URL: amqp://guest:guest@rabbitmq:5672
        BUCKET_HOST: http://localhost:9000/
        BUCKET_ENDPOINT: http://minio:9000/
        BUCKET_ACCESS_KEY: ROOTUSER
        BUCKET_SECRET_KEY: ROOTPASSWORD123
      ports:
          - "4000:4000"
      networks:
        - mynet
      # command: sh -c "npm run dev"

networks:
  mynet:
    driver: bridge  