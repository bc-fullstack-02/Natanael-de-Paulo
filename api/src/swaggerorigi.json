{
  "openapi": "3.0.3",
  "info": {
    "title": "API para uma rede social",
    "description": "Essa API tem como objetivo a manipulação de eventos de uma rede social",
    "termsOfService": "http://localhost:3001/terms",
    "contact": {
      "email": "natanaeldepaulo123@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/v1",
      "description": "API de teste"
      
    },
    {
      "schemes": [
        "https",
        "http"
      ]
    }
  ],
  
  "paths": {
    "/security/login": { 
      "post": {
        "summary": "Logar usuario",
        "description": "Rota responsavel por verificar se as credencias de login estão de acordo com o que está armazando no banco de dados. Apos confirmar usuario existente, irá gerar o token de acesso.",
        "tags": ["Security"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "user": "User",
                    "password": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {}

      }
    },
    "/security/register": {
      "post": {
        "summary": "Cadastrar usuario",
        "description": "Rota responsavel por cadastrar  usuario, encriptografar a senha e salvar este usuario no banco de dados com a senha encriptografada.",
        "tags": ["Security"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Name do perfil",
                    "user": "Nome de Usuario",
                    "password": "1234"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get":{
        "summary": "Listar posts",
        "description": "Essa rota será responsavel por listar os posts",
        "tags": ["Posts"],
        "operationId":"listarPosts",
        "responses": {
          "200" : {
            "description": "OK",
            "content": {
              "header": {
                "Authorization": "Bearer "
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Post"
                  
                }
                
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "summary": "Criação de post",
        "description": "Essa rota será responsavel por criar um novo post",
        "tags": ["Posts"],
        "operationId": "criarNovoPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              },
              "examples": {
                "post":{
                  "summary": "exemplo de post",
                  "value": {
                    "title": "TestPostSwaggerTitle",
                    "description": "TestPostSwaggerDescription"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201" : {
            "description": "post criado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Post"
                  
                }
                
              }
            }
          }
          
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "summary":"Listar post pelo id",
        "description" : "Buscar post pelo id",
        "tags":["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post pelo id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary":"Deletar post pelo id",
        "description" : "Deletar post pelo id",
        "tags":["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post pelo id",
            "required": true
          }
        ]
      }
    },
    "/post/{id/like}":{
      "post": {
        "summary": "Curtir post",
        "description": "Essa rota será responsavel por dar like e deslike em um determinado post",
        "tags": ["Posts"],
        "operationId": "CurtirNovoPost"
      }
    }
  },
  "components": {
    "schemas": {
      "Post":{
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string",
            "required": true
          },
          "profile": {
            "type": "object",
            "$ref": "#/components/schemas/Profile"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Comment"
            }
          },
          "likes": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Profile"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "Digite o usuario para logar",
            "required": true
          },
          "password": {
            "type": "string",
            "description": "Digite a senha para logar",
            "required": true
          },
          "profile": {
            "type": "object",
            "$ref": "#/components/schemas/Profile"
          }
        }
      },
      "Profile": {
        "type":"object",
        "properties": {
          "name": {
            "type": "string",
            "required": true,
            "minLength": 2
          },
          "email": {
            "type": "string",
            "minLength": 2
          },
          "image": {
            "type": "boolean",
            "default": false
          },
          "imageUrl": {
            "type": "string",
            "minLength": 2
          },
          "user": {
            "required": true,
            "type": "object",
            "$ref": "#/components/schemas/User"
          },
          "following": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Profile"
            }
          },
          "followers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Profile"
            }
          }
        }
      },
      "Comment":{
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "required": true,
            "minLength": 2
          },
          "post": {
            "type": "object",
            "$ref": "#/components/schemas/Post"
          },
          "profile": {
            "type": "object",
            "$ref": "#/components/schemas/Profile"
          },
          "likes": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Profile"
            }
          }
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "api_key": {
          "type": "apiKey",
          "name": "api_key",
          "in": "header"
        },
        "auth": {
          "type": "oauth2",
          "authorizationUrl": "https://http://localhost:3001/api-docs/#/security/login",
          "flow": "implicit"
        }
      }
    }
  },
  "security": {
    "bearerAuth": [], 
    "api_key": [],
    "auth": []
  },
  "securityDefinitions": {
    "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description":"Insira o token JWT com o Bearer. Por exemplo: `Bearer: abcde12345 `."
    },
    "auto": {
      "type": "oauth2",
      "name": "AuthorizationOauth",
      "flows": {
        "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write":"pets: modify pets in your account",
              "read:pets": "read your pets"
            }
        }
      }
    }
  }
}